{"ast":null,"code":"var _jsxFileName = \"/Users/dorian.gloinec/Documents/GitHub/HR-Review/frontend/src/components/maincontent/EmployeeContent.js\",\n  _s = $RefreshSig$();\nimport { getEmployeeTable } from \"services/APIEmployee\";\nimport TablePagination from \"utils/TablePagination\";\nimport { PencilSquareIcon, TrashIcon } from \"@heroicons/react/24/solid\";\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeTable() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pageCount, setPageCount] = useState(0);\n  const [totalRow, setTotalRow] = useState(0);\n  const [searchValue, setSearchValue] = useState(\"\"); // 1. Add state for search value\n\n  const fetchData = useCallback(async (pageSize, pageIndex, order) => {\n    // 2. Remove 'search' parameter from fetchData\n    setLoading(true);\n    try {\n      const queryOptions = {\n        page: pageIndex,\n        limit: pageSize,\n        search: searchValue,\n        // 2. Include search value in query options\n        order: order\n      };\n      const items = await getEmployeeTable(queryOptions);\n      console.log(\"API response:\", items);\n      if (Array.isArray(items)) {\n        const totalRow = items.length;\n        setTotalRow(totalRow);\n        const pageCount = Math.ceil(totalRow / pageSize);\n        setPageCount(pageCount);\n        const startIndex = pageIndex * pageSize;\n        const endIndex = startIndex + pageSize;\n        const slicedItems = items.slice(startIndex, endIndex);\n        setData(slicedItems);\n      } else {\n        console.error(\"Invalid response format from API:\", items);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }, [searchValue] // 2. Add searchValue to dependency array\n  );\n  const handleSearchChange = e => {\n    setSearchValue(e.target.value); // 3. Handle search input change\n  };\n  const columns = React.useMemo(() => [{\n    Header: \"#\",\n    accessor: \"id\",\n    Cell: ({\n      row\n    }) => `#${row.original.id}`,\n    disableSortBy: true\n  }, {\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Email\",\n    accessor: \"email\"\n  },\n  // Add other columns as needed\n  {\n    Header: \"Action\",\n    accessor: ({\n      row\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-xs btn-info\",\n          children: /*#__PURE__*/_jsxDEV(PencilSquareIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-xs btn-error\",\n          children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    }\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"EmployeeTable\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: searchValue,\n        onChange: handleSearchChange,\n        className: \"border rounded px-2 py-1 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      columns: columns,\n      data: data,\n      fetchData: fetchData,\n      loading: loading,\n      pageCount: pageCount,\n      totalRow: totalRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeTable, \"6w3+ZoQy3QeAO71KeUQNcnyA8aI=\");\n_c = EmployeeTable;\nexport default EmployeeTable;\nvar _c;\n$RefreshReg$(_c, \"EmployeeTable\");","map":{"version":3,"names":["getEmployeeTable","TablePagination","PencilSquareIcon","TrashIcon","React","useState","useCallback","jsxDEV","_jsxDEV","EmployeeTable","_s","data","setData","loading","setLoading","pageCount","setPageCount","totalRow","setTotalRow","searchValue","setSearchValue","fetchData","pageSize","pageIndex","order","queryOptions","page","limit","search","items","console","log","Array","isArray","length","Math","ceil","startIndex","endIndex","slicedItems","slice","error","handleSearchChange","e","target","value","columns","useMemo","Header","accessor","Cell","row","original","id","disableSortBy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/dorian.gloinec/Documents/GitHub/HR-Review/frontend/src/components/maincontent/EmployeeContent.js"],"sourcesContent":["import { getEmployeeTable } from \"services/APIEmployee\";\nimport TablePagination from \"utils/TablePagination\";\nimport { PencilSquareIcon, TrashIcon } from \"@heroicons/react/24/solid\";\nimport React, { useState, useCallback } from \"react\";\n\nfunction EmployeeTable() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pageCount, setPageCount] = useState(0);\n  const [totalRow, setTotalRow] = useState(0);\n  const [searchValue, setSearchValue] = useState(\"\"); // 1. Add state for search value\n\n  const fetchData = useCallback(\n    async (pageSize, pageIndex, order) => { // 2. Remove 'search' parameter from fetchData\n      setLoading(true);\n      try {\n        const queryOptions = {\n          page: pageIndex,\n          limit: pageSize,\n          search: searchValue, // 2. Include search value in query options\n          order: order,\n        };\n        const items = await getEmployeeTable(queryOptions);\n        console.log(\"API response:\", items);\n        if (Array.isArray(items)) {\n          const totalRow = items.length;\n          setTotalRow(totalRow);\n          const pageCount = Math.ceil(totalRow / pageSize);\n          setPageCount(pageCount);\n          const startIndex = pageIndex * pageSize;\n          const endIndex = startIndex + pageSize;\n          const slicedItems = items.slice(startIndex, endIndex);\n          setData(slicedItems);\n        } else {\n          console.error(\"Invalid response format from API:\", items);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [searchValue] // 2. Add searchValue to dependency array\n  );\n\n  const handleSearchChange = (e) => {\n    setSearchValue(e.target.value); // 3. Handle search input change\n  };\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"#\",\n        accessor: \"id\",\n        Cell: ({ row }) => `#${row.original.id}`,\n        disableSortBy: true,\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n      },\n      // Add other columns as needed\n      {\n        Header: \"Action\",\n        accessor: ({ row }) => {\n          return (\n            <div className=\"flex gap-2\">\n              <button className=\"btn btn-xs btn-info\">\n                <PencilSquareIcon className=\"w-4 h-4\" />\n              </button>\n              <button className=\"btn btn-xs btn-error\">\n                <TrashIcon className=\"w-4 h-4\" />\n              </button>\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <section id=\"EmployeeTable\">\n      <div className=\"flex items-center mb-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={handleSearchChange}\n          className=\"border rounded px-2 py-1 mr-2\"\n        />\n      </div>\n      <TablePagination\n        columns={columns}\n        data={data}\n        fetchData={fetchData}\n        loading={loading}\n        pageCount={pageCount}\n        totalRow={totalRow}\n      />\n    </section>\n  );\n}\n\nexport default EmployeeTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}